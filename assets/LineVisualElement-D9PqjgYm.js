import{ak as f,iZ as g,i_ as y,aQ as C,i$ as P,eA as v,c0 as w,ev as R,dt as u,eY as d,eX as b,cU as O,a8 as n,j0 as c,j1 as G,j2 as E}from"./index-r0Ml_rWi.js";import{t as x}from"./VisualElement-DWlzcYLA.js";class j extends x{constructor(e){super(e),this._resources=null,this._transform=f()}get object(){return this._resources!=null?this._resources.object:null}get transform(){return this._transform}set transform(e){g(this._transform,e),this._resources!=null&&(this._resources.object.transformation=this._transform)}recreate(){this.attached&&this.createResources()}recreateGeometry(){if(this._resources==null)return;const e=this._resources.object,t=this.view._stage;t.removeMany(e.geometries),e.removeAllGeometries(),this.createGeometries(e),e.visible=this.visible,t.addMany(e.geometries)}createResources(){this.destroyResources();const e=this.view._stage;if(!e)return;const t=new y(e,{pickable:!1,updatePolicy:C.SYNC}),r=new P({castShadow:!1});r.transformation=this._transform,this.createExternalResources(),this.createGeometries(r),e.addMany(r.geometries),this.forEachExternalMaterial(s=>e.add(s)),e.add(r),t.add(r),r.visible=this.visible,this._resources={layer:t,object:r}}destroyResources(){const e=this.view._stage;this._resources!=null&&e&&(e.remove(this._resources.object),this._resources.layer.destroy(),this.forEachExternalMaterial(t=>{e.remove(t)}),e.removeMany(this._resources.object.geometries),this._resources.object.dispose(),this.destroyExternalResources(),this._resources=null)}updateVisibility(e){this._resources!=null&&(this._resources.object.visible=e)}}class H extends j{constructor(e,t){super(e),this._hasExternalMaterial=!1,this._hasExternalMaterial=t!=null,this._material=t??new v({width:1,color:w(1,0,1,1),stippleOffColor:null,stipplePattern:null,stipplePreferContinuous:!0,isClosed:!1,falloff:0,innerColor:null,innerWidth:1,hasPolygonOffset:!1,renderOccluded:R.OccludeAndTransparent,isDecoration:!!e.isDecoration,writeDepth:!0}),this.applyProperties(e)}setGeometryFromRenderSpacePoint(e,t=1e3){this.geometry=[[[e[0]-t,e[1],e[2]],[e[0]+t,e[1],e[2]]],[[e[0],e[1]-t,e[2]],[e[0],e[1]+t,e[2]]],[[e[0],e[1],e[2]-t],[e[0],e[1],e[2]+t]]]}setGeometryFromExtent(e){const t=this.view.spatialReference,r=n(),s=n(),i=100,o=[];u(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),u(r,e[2],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),u(r,e[2],e[3],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),u(r,e[0],e[3],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),u(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),u(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),this.geometry=[o]}setGeometryFromFrustum(e){const t=[];e.lines.forEach(r=>{t.push([r.origin[0],r.origin[1],r.origin[2]]),t.push([r.endpoint[0],r.endpoint[1],r.endpoint[2]])}),this.geometry=[t]}setGeometryFromBoundedPlane(e){const t=[],r=e.origin,s=e.basis1,i=e.basis2,o=.5,a=n(),l=n(),h=n(),m=n();a[0]=r[0]-s[0]*o-i[0]*o,a[1]=r[1]-s[1]*o-i[1]*o,a[2]=r[2]-s[2]*o-i[2]*o,l[0]=r[0]-s[0]*o+i[0]*o,l[1]=r[1]-s[1]*o+i[1]*o,l[2]=r[2]-s[2]*o+i[2]*o,h[0]=r[0]+s[0]*o+i[0]*o,h[1]=r[1]+s[1]*o+i[1]*o,h[2]=r[2]+s[2]*o+i[2]*o,m[0]=r[0]+s[0]*o-i[0]*o,m[1]=r[1]+s[1]*o-i[1]*o,m[2]=r[2]+s[2]*o-i[2]*o,t.push([a[0],a[1],a[2]]),t.push([l[0],l[1],l[2]]),t.push([h[0],h[1],h[2]]),t.push([m[0],m[1],m[2]]),t.push([a[0],a[1],a[2]]),this.geometry=[t]}setGeometryFromSegment(e){const t=e.endRenderSpace;this.transform=d(p,t);const{points:r}=e.createRenderGeometry(t,this.view.renderCoordsHelper);this.geometry=[r]}setGeometryFromSegments(e,t=b){this.transform=d(p,t),this.geometry=e.map(r=>r.createRenderGeometry(t,this.view.renderCoordsHelper).points)}getTransformedGeometry(){return this._geometry==null?null:this._geometry.map(e=>e.map(t=>O(n(),t,this.transform)))}get renderOccluded(){return this._material.parameters.renderOccluded}set renderOccluded(e){this._material.setParameters({renderOccluded:e})}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get width(){return this._material.parameters.width}set width(e){this._material.setParameters({width:e})}get color(){return this._material.parameters.color}set color(e){const t=e[3]===1;this._material.setParameters({color:c(e),writeDepth:t})}get innerWidth(){return this._material.parameters.innerWidth}set innerWidth(e){this._material.setParameters({innerWidth:e})}get innerColor(){return this._material.parameters.innerColor}set innerColor(e){this._material.setParameters({innerColor:e!=null?c(e):null})}get stipplePattern(){return this._material.parameters.stipplePattern}set stipplePattern(e){this._material!=null&&this._material.setParameters({stipplePattern:e})}get stippleOffColor(){return this._material.parameters.stippleOffColor}set stippleOffColor(e){this._material.setParameters({stippleOffColor:e!=null?c(e):null})}get stipplePreferContinuous(){return this._material.parameters.stipplePreferContinuous}set stipplePreferContinuous(e){this._material.setParameters({stipplePreferContinuous:e})}get falloff(){return this._material.parameters.falloff}set falloff(e){this._material.setParameters({falloff:e})}get polygonOffset(){return this._material.parameters.hasPolygonOffset}set polygonOffset(e){this._material.setParameters({hasPolygonOffset:e})}createExternalResources(){}destroyExternalResources(){}createGeometries(e){for(const t of G(this.geometry)){const r=E(this._material,t);e.addGeometry(r)}}forEachExternalMaterial(e){this._hasExternalMaterial||e(this._material)}}const p=f();export{j as a,H as f};
