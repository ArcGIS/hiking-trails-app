import{j9 as f,eV as _,ep as g,jJ as j,iq as l,e as L,k as v,jK as b,eu as x,a8 as u,G as y,fo as V,eD as P,jL as S,jM as C,ad as h}from"./index-r0Ml_rWi.js";const I=1e3;function T(t,s,e){const n=j(),o=l(n);return f(o,o,t,.5),f(o,o,s,.5),n[3]=_(o,t),g(o,o,e),n}let m=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=x(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,s){await Promise.resolve(),y(s),await this._ensureEdgeLocations(t,s);const e=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,e),e.length<I),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,s){const e=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:a,uid:d}=i;e.push({id:a,uid:d})}return!0},t.bounds),!e.length)return;const n={components:e},o=await this.remoteClient.invoke("fetchAllEdgeLocations",n,s??{});for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const s=new p(t.id,t.bounds);return this._idToComponent.set(s.id,s),this._components.add([s]),{result:{}}}async remove(t){const s=this._idToComponent.get(t.id);if(s){const e=[];this._edges.forEachNeighbor(n=>(n.component===s&&e.push(n),!0),s.bounds),this._edges.remove(e),this._components.remove([s]),this._idToComponent.delete(s.id)}return{result:{}}}_setFetchEdgeLocations(t){const s=this._idToComponent.get(t.id);if(s==null||t.uid!==s.uid)return;const e=V.createView(t.locations),n=new Array(e.count),o=u(),i=u();for(let c=0;c<e.count;c++){e.position0.getVec(c,o),e.position1.getVec(c,i);const r=T(o,i,t.origin),E=new k(s,c,r);n[c]=E}this._edges.add(n);const{objectIds:a,origin:d}=t;s.info={locations:e,objectIds:a,origin:d}}_addCandidates(t,s,e){const{info:n}=s.component,{origin:o,objectIds:i}=n,a=n.locations,d=a.position0.getVec(s.index,this._tmpP1),c=a.position1.getVec(s.index,this._tmpP2);g(d,d,o),g(c,c,o);const r=i[a.componentIndex.get(s.index)];this._addEdgeCandidate(t,r,d,c,e),w(t,r,d,e),w(t,r,c,e)}_addEdgeCandidate(t,s,e,n,o){if(!t.returnEdge)return;const i=l(t.bounds),a=P(e,n,this._tmpLineSegment),d=S(a,i,this._tmpP3);C(t.bounds,d)&&o.push({type:"edge",objectId:s,target:h(d),distance:_(i,d),start:h(e),end:h(n)})}};m=L([v("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],m);const N=m;function w(t,s,e,n){if(!t.returnVertex||!C(t.bounds,e))return;const o=l(t.bounds);n.push({type:"vertex",objectId:s,target:h(e),distance:_(o,e)})}class p{constructor(s,e){this.id=s,this.bounds=e,this.info=null,this.uid=++p.uid}}p.uid=0;class k{constructor(s,e,n){this.component=s,this.index=e,this.bounds=n}}export{N as default};
